
.pioenvs/bluepill_f103c8/firmware.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .text	00000000 .text
08000218 l    d  .preinit_array	00000000 .preinit_array
08000218 l    d  .init_array	00000000 .init_array
08000218 l    d  .fini_array	00000000 .fini_array
20000000 l    d  .data	00000000 .data
20000010 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vector.c
00000000 l    df *ABS*	00000000 main.c
08000188  w    F .text	00000090 reset_handler
08000184  w    F .text	00000002 usart3_isr
08000184  w    F .text	00000002 rtc_isr
08000184  w    F .text	00000002 tim7_isr
08000184  w    F .text	00000002 adc1_2_isr
08000184  w    F .text	00000002 tim1_trg_com_isr
20000000 g     O .data	00000008 x
08000218 g       .fini_array	00000000 __exidx_end
08000178 g     F .text	0000000c __wrap___aeabi_dmul
08000184  w    F .text	00000002 usb_hp_can_tx_isr
08000184  w    F .text	00000002 tim6_isr
08000218 g       .data	00000000 _etext
08000184  w    F .text	00000002 usb_wakeup_isr
08000184 g     F .text	00000002 blocking_handler
08000184  w    F .text	00000002 tim5_isr
08000184  w    F .text	00000002 otg_fs_isr
08000184  w    F .text	00000002 spi1_isr
08000184  w    F .text	00000002 exti2_isr
08000184  w    F .text	00000002 dma1_channel6_isr
08000186 g     F .text	00000002 null_handler
08000184  w    F .text	00000002 can_rx1_isr
08000218 g       .fini_array	00000000 __fini_array_end
08000184  w    F .text	00000002 dma1_channel5_isr
08000184  w    F .text	00000002 dma2_channel5_isr
08000184  w    F .text	00000002 usart1_isr
08000184  w    F .text	00000002 usage_fault_handler
08000184  w    F .text	00000002 tim8_trg_com_isr
08000184  w    F .text	00000002 can2_rx0_isr
08000184  w    F .text	00000002 tim1_brk_isr
08000218 g       .fini_array	00000000 __exidx_start
08000184  w    F .text	00000002 can2_rx1_isr
08000184  w    F .text	00000002 tim1_cc_isr
08000184  w    F .text	00000002 sdio_isr
08000184  w    F .text	00000002 eth_isr
08000184  w    F .text	00000002 dma1_channel4_isr
08000184  w    F .text	00000002 tim8_brk_isr
08000184  w    F .text	00000002 dma2_channel4_5_isr
20000018 g       .bss	00000000 _ebss
08000184  w    F .text	00000002 pvd_isr
20000010 g     O .bss	00000008 r
08000186  w    F .text	00000002 sv_call_handler
08000184  w    F .text	00000002 rcc_isr
08000000 g     O .text	00000150 vector_table
08000184  w    F .text	00000002 flash_isr
08000218 g       *ABS*	00000000 _data_loadaddr
20000018 g       .bss	00000000 end
08000184  w    F .text	00000002 uart4_isr
08000184  w    F .text	00000002 rtc_alarm_isr
08000184  w    F .text	00000002 exti15_10_isr
08000184  w    F .text	00000002 hard_fault_handler
08000184  w    F .text	00000002 exti1_isr
08000184  w    F .text	00000002 i2c1_ev_isr
08000184  w    F .text	00000002 dma2_channel1_isr
08000186  w    F .text	00000002 pend_sv_handler
08000184  w    F .text	00000002 spi2_isr
08000184  w    F .text	00000002 tim8_up_isr
08000184  w    F .text	00000002 dma2_channel2_isr
08000186  w    F .text	00000002 debug_monitor_handler
08000184  w    F .text	00000002 exti3_isr
08000184  w    F .text	00000002 adc3_isr
08000184  w    F .text	00000002 tim3_isr
08000184  w    F .text	00000002 usart2_isr
08000184  w    F .text	00000002 usb_lp_can_rx0_isr
08000218 g       .fini_array	00000000 __fini_array_start
08000184  w    F .text	00000002 i2c2_er_isr
08000150 g     F .text	00000028 main
08000184  w    F .text	00000002 i2c2_ev_isr
08000184  w    F .text	00000002 uart5_isr
08000186  w    F .text	00000002 sys_tick_handler
08000218 g       .init_array	00000000 __init_array_end
08000184  w    F .text	00000002 fsmc_isr
08000184  w    F .text	00000002 dma1_channel1_isr
08000184  w    F .text	00000002 exti4_isr
20000008 g     O .data	00000008 y
08000184  w    F .text	00000002 mem_manage_handler
08000184  w    F .text	00000002 can2_tx_isr
08000184  w    F .text	00000002 exti9_5_isr
08000184  w    F .text	00000002 dma2_channel3_isr
08000218 g       .preinit_array	00000000 __preinit_array_end
08000184  w    F .text	00000002 dma1_channel7_isr
20000000 g       .data	00000000 _data
08000184  w    F .text	00000002 tim1_up_isr
08000184  w    F .text	00000002 can2_sce_isr
08000184  w    F .text	00000002 tim4_isr
20000010 g       .data	00000000 _edata
08000184  w    F .text	00000002 dma1_channel2_isr
08000184  w    F .text	00000002 i2c1_er_isr
08000184  w    F .text	00000002 can_sce_isr
08000186  w    F .text	00000002 nmi_handler
08000184  w    F .text	00000002 tim8_cc_isr
08000184  w    F .text	00000002 tamper_isr
08000218 g       .init_array	00000000 __init_array_start
08000184  w    F .text	00000002 eth_wkup_isr
20005000 g       .bss	00000000 _stack
08000184  w    F .text	00000002 bus_fault_handler
08000184  w    F .text	00000002 wwdg_isr
08000184  w    F .text	00000002 dma1_channel3_isr
08000218 g       .preinit_array	00000000 __preinit_array_start
08000184  w    F .text	00000002 spi3_isr
08000184  w    F .text	00000002 tim2_isr
08000184  w    F .text	00000002 exti0_isr



Disassembly of section .text:

08000000 <vector_table>:
 8000000:	00 50 00 20 89 01 00 08 87 01 00 08 85 01 00 08     .P. ............
 8000010:	85 01 00 08 85 01 00 08 85 01 00 08 00 00 00 00     ................
	...
 800002c:	87 01 00 08 87 01 00 08 00 00 00 00 87 01 00 08     ................
 800003c:	87 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800004c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800005c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800006c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800007c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800008c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800009c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 80000ac:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 80000bc:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 80000cc:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 80000dc:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 80000ec:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 80000fc:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800010c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800011c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800012c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800013c:	85 01 00 08 85 01 00 08 85 01 00 08 85 01 00 08     ................
 800014c:	85 01 00 08                                         ....

08000150 <main>:
main():
/Users/Luppy/stm32bluepill-math-hack/src/main.c:7
double x = 123;
double y = 456;
double r;

int main(void)
{	
 8000150:	b508      	push	{r3, lr}
/Users/Luppy/stm32bluepill-math-hack/src/main.c:8
	r = x * y;
 8000152:	4906      	ldr	r1, [pc, #24]	; (800016c <main+0x1c>)
 8000154:	4b06      	ldr	r3, [pc, #24]	; (8000170 <main+0x20>)
 8000156:	e9d1 0100 	ldrd	r0, r1, [r1]
 800015a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800015e:	f000 f80b 	bl	8000178 <__wrap___aeabi_dmul>
 8000162:	4b04      	ldr	r3, [pc, #16]	; (8000174 <main+0x24>)
 8000164:	e9c3 0100 	strd	r0, r1, [r3]
/Users/Luppy/stm32bluepill-math-hack/src/main.c:10
	return 0;
}
 8000168:	2000      	movs	r0, #0
 800016a:	bd08      	pop	{r3, pc}
 800016c:	20000000 	.word	0x20000000
 8000170:	20000008 	.word	0x20000008
 8000174:	20000010 	.word	0x20000010

08000178 <__wrap___aeabi_dmul>:
__wrap___aeabi_dmul():
/Users/Luppy/stm32bluepill-math-hack/src/main.c:15

//  double-precision multiplication
double __wrap___aeabi_dmul(double x, double y) { 
    return 123456; 
}
 8000178:	2000      	movs	r0, #0
 800017a:	4901      	ldr	r1, [pc, #4]	; (8000180 <__wrap___aeabi_dmul+0x8>)
 800017c:	4770      	bx	lr
 800017e:	bf00      	nop
 8000180:	40fe2400 	.word	0x40fe2400

08000184 <blocking_handler>:
blocking_handler():
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:104
	}

}

void blocking_handler(void)
{
 8000184:	e7fe      	b.n	8000184 <blocking_handler>

08000186 <null_handler>:
null_handler():
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:111
}

void null_handler(void)
{
	/* Do nothing. */
}
 8000186:	4770      	bx	lr

08000188 <reset_handler>:
reset_handler():
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:68
	for (src = &_data_loadaddr, dest = &_data;
 8000188:	2200      	movs	r2, #0
 800018a:	4c18      	ldr	r4, [pc, #96]	; (80001ec <reset_handler+0x64>)
 800018c:	4918      	ldr	r1, [pc, #96]	; (80001f0 <reset_handler+0x68>)
 800018e:	4819      	ldr	r0, [pc, #100]	; (80001f4 <reset_handler+0x6c>)
 8000190:	1853      	adds	r3, r2, r1
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:68 (discriminator 1)
 8000192:	4283      	cmp	r3, r0
 8000194:	d316      	bcc.n	80001c4 <reset_handler+0x3c>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:75
		*dest++ = 0;
 8000196:	2100      	movs	r1, #0
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:74
	while (dest < &_ebss) {
 8000198:	4a17      	ldr	r2, [pc, #92]	; (80001f8 <reset_handler+0x70>)
 800019a:	4293      	cmp	r3, r2
 800019c:	d316      	bcc.n	80001cc <reset_handler+0x44>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:80
	SCB_CCR |= SCB_CCR_STKALIGN;
 800019e:	4a17      	ldr	r2, [pc, #92]	; (80001fc <reset_handler+0x74>)
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:86
	for (fp = &__preinit_array_start; fp < &__preinit_array_end; fp++) {
 80001a0:	4c17      	ldr	r4, [pc, #92]	; (8000200 <reset_handler+0x78>)
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:80
	SCB_CCR |= SCB_CCR_STKALIGN;
 80001a2:	6813      	ldr	r3, [r2, #0]
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:86
	for (fp = &__preinit_array_start; fp < &__preinit_array_end; fp++) {
 80001a4:	4d17      	ldr	r5, [pc, #92]	; (8000204 <reset_handler+0x7c>)
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:80
	SCB_CCR |= SCB_CCR_STKALIGN;
 80001a6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80001aa:	6013      	str	r3, [r2, #0]
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:86 (discriminator 1)
	for (fp = &__preinit_array_start; fp < &__preinit_array_end; fp++) {
 80001ac:	42ac      	cmp	r4, r5
 80001ae:	d310      	bcc.n	80001d2 <reset_handler+0x4a>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:89
	for (fp = &__init_array_start; fp < &__init_array_end; fp++) {
 80001b0:	4c15      	ldr	r4, [pc, #84]	; (8000208 <reset_handler+0x80>)
 80001b2:	4d16      	ldr	r5, [pc, #88]	; (800020c <reset_handler+0x84>)
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:89 (discriminator 1)
 80001b4:	42ac      	cmp	r4, r5
 80001b6:	d310      	bcc.n	80001da <reset_handler+0x52>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:94
	main();
 80001b8:	f7ff ffca 	bl	8000150 <main>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:97
	for (fp = &__fini_array_start; fp < &__fini_array_end; fp++) {
 80001bc:	4c14      	ldr	r4, [pc, #80]	; (8000210 <reset_handler+0x88>)
 80001be:	4d15      	ldr	r5, [pc, #84]	; (8000214 <reset_handler+0x8c>)
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:97 (discriminator 1)
 80001c0:	42ac      	cmp	r4, r5
 80001c2:	d30e      	bcc.n	80001e2 <reset_handler+0x5a>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:71
		*dest = *src;
 80001c4:	5913      	ldr	r3, [r2, r4]
 80001c6:	5053      	str	r3, [r2, r1]
 80001c8:	3204      	adds	r2, #4
 80001ca:	e7e1      	b.n	8000190 <reset_handler+0x8>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:75
		*dest++ = 0;
 80001cc:	6019      	str	r1, [r3, #0]
 80001ce:	3304      	adds	r3, #4
 80001d0:	e7e3      	b.n	800019a <reset_handler+0x12>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:87 (discriminator 3)
		(*fp)();
 80001d2:	f854 3b04 	ldr.w	r3, [r4], #4
 80001d6:	4798      	blx	r3
 80001d8:	e7e8      	b.n	80001ac <reset_handler+0x24>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:90 (discriminator 3)
		(*fp)();
 80001da:	f854 3b04 	ldr.w	r3, [r4], #4
 80001de:	4798      	blx	r3
 80001e0:	e7e8      	b.n	80001b4 <reset_handler+0x2c>
/Users/Luppy/.platformio/packages/framework-libopencm3/lib/cm3/vector.c:98 (discriminator 3)
		(*fp)();
 80001e2:	f854 3b04 	ldr.w	r3, [r4], #4
 80001e6:	4798      	blx	r3
 80001e8:	e7ea      	b.n	80001c0 <reset_handler+0x38>
 80001ea:	bf00      	nop
 80001ec:	08000218 	.word	0x08000218
 80001f0:	20000000 	.word	0x20000000
 80001f4:	20000010 	.word	0x20000010
 80001f8:	20000018 	.word	0x20000018
 80001fc:	e000ed14 	.word	0xe000ed14
 8000200:	08000218 	.word	0x08000218
 8000204:	08000218 	.word	0x08000218
 8000208:	08000218 	.word	0x08000218
 800020c:	08000218 	.word	0x08000218
 8000210:	08000218 	.word	0x08000218
 8000214:	08000218 	.word	0x08000218
